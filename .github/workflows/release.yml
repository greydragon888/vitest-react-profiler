name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write # Required for OIDC/Trusted Publishers

jobs:
  release:
    name: Release to NPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Verify package
        run: |
          npm pack --dry-run
          echo "Package contents:"
          npm pack --json | node -e "const data=JSON.parse(require('fs').readFileSync(0,'utf8')); data[0].files.forEach(f=>console.log(f.path))" || true

      - name: Set version from input
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version --allow-same-version
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Set version from tag
        if: github.event_name == 'push'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version --allow-same-version
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(env.VERSION, '-') }}
          files: |
            vitest-react-profiler-*.tgz
