import { defineConfig } from "vitest/config";
import path from "path";

/**
 * Vitest configuration for property-based testing
 *
 * Property-based tests verify mathematical invariants and behavioral properties
 * using randomized inputs generated by fast-check.
 *
 * @see https://vitest.dev/config/
 * @see https://fast-check.dev/
 */
export default defineConfig({
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
      "@test-utils": path.resolve(__dirname, "./src/test-utils"),
      "@components": path.resolve(__dirname, "./src/components"),
    },
  },

  test: {
    /**
     * Test environment configuration
     */
    environment: "jsdom",

    /**
     * Setup files to run before tests
     */
    setupFiles: ["./tests/setup.ts"],

    /**
     * Enable global test APIs (describe, it, expect)
     */
    globals: true,

    /**
     * Coverage configuration - disabled for property tests
     * Property tests focus on invariants, not coverage
     */
    coverage: {
      enabled: false,
    },

    /**
     * Test isolation settings
     */
    clearMocks: true,
    restoreMocks: true,
    mockReset: true,

    /**
     * Performance settings
     */
    isolate: true, // Run tests in isolation for accurate profiling

    /**
     * Reporter configuration
     */
    reporters: ["default"],

    /**
     * Test filtering - only property-based tests
     */
    include: ["tests/property/**/*.properties.{ts,tsx}"],
    exclude: ["node_modules", "dist", ".idea", ".git", ".cache"],

    /**
     * Timeout configuration
     * Property-based tests run multiple iterations (50-1000+ runs per test)
     * and need more time than standard example-based tests
     */
    testTimeout: 30000, // 30 seconds per test
    hookTimeout: 10000, // 10 seconds for hooks
  },

  /**
   * Define global constants
   */
  define: {
    __TEST__: true,
    __DEV__: process.env.NODE_ENV !== "production",
  },
});
